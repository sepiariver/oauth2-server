{
    "name": "OAuth2Server"
    ,"lowCaseName": "oauth2server"
    ,"description": "Deploy an OAuth2 server in MODX. Grant, revoke and manage access tokens, and verify requests against them."
    ,"author": "YJ Tso"
    ,"version": "1.0.0-beta1"
    ,"package":{
        "menus": [
          {
            "text": "oauth2server.menu.manage",
            "description": "oauth2server.menu.manage_desc",
            "action": "manage"
          }
        ],
        "elements": {
            "snippets": [{
                "name": "verifyOAuth2",
                "file": "verifyoauth2.snippet.php"
                },{
                "name": "authorizeOAuth2",
                "file": "authorizeoauth2.snippet.php"
                },{
                "name": "grantOAuth2Tokens",
                "file": "grantoauth2tokens.snippet.php"
            }]
            ,"plugins": [{
                "name": "VerifyOAuth2Context",
                "file": "verifyoauth2context.plugin.php",
                "events": ["OnWebPageInit"],
                "properties": [{
                    "name": "contexts",
                    "value": "api",
                    "description": "Limit Plugin action to these contexts (comma-separated list of keys)."
                },{
                    "name": "excludeUris",
                    "value": "auth.html,tokens.json",
                    "description": "Authorization endpoint and Token controller generally need to be accessible without OAuth2 verification."
                },{
                    "name": "redirectTo",
                    "value": "unauthorized",
                    "description": "Can be 'unauthorized' or 'error'. Both fire exit()."
                }]    
            }]
            ,"chunks": [{
                "name": "oauth2server_auth_tpl",
                "file": "oauth2server_auth_tpl.chunk.tpl"
            }]
        }
        ,"resources": [{
            "pagetitle": "OAuth2 Token Controller"
            ,"alias": "tokens"
            ,"template": 0
            ,"content_type": 7
            ,"published": 1
            ,"hidemenu": 1
            ,"cacheable": 0
            ,"richtext": 0
            ,"content": "[[!grantOAuth2Tokens]]"
        },{
            "pagetitle": "OAuth2 Authorization"
            ,"alias": "auth"
            ,"template": 0
            ,"published": 1
            ,"hidemenu": 1
            ,"cacheable": 0
            ,"richtext": 0
            ,"content": "[[!authorizeOAuth2]]"
        },{
            "pagetitle": "OAuth2 Verification Example"
            ,"alias": "verify"
            ,"template": 0
            ,"content_type": 7
            ,"published": 1
            ,"hidemenu": 1
            ,"cacheable": 0
            ,"richtext": 0
            ,"content": "[[!verifyOAuth2? &returnOnSuccess=`{\"success\":true}`]]"
        }]
        ,"systemSettings": [{
            "key": "oauth2server.enabled"
            ,"value": "1"
        }]
    }
    ,"database":{
        "tables": [
            "OAuth2ServerClients"
            ,"OAuth2ServerAccessTokens"
            ,"OAuth2ServerAuthorizationCodes"
            ,"OAuth2ServerRefreshTokens"
            ,"OAuth2ServerScopes"
            ,"OAuth2ServerJwt"
        ]
    }
    
}
